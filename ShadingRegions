<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Map Game</title>
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY"></script>
    <style>
        #map {
            height: 90vh;
            width: 100%;
        }
        #controls {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin: 10px;
        }
        button {
            padding: 10px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <div id="controls">
        <button id="drawCircleLocation">Draw Circle Around My Location</button>
        <button id="drawRectangleLocation">Draw Rectangle Around My Location</button>
        <button id="shadeWestLocation">Shade West of My Location</button>
        <button id="shadeCardinal">Shade a Cardinal Direction</button>
        <button id="clearMap">Clear Map</button>
    </div>
    <div id="map"></div>

    <script>
        let map;
        let shapes = [];

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 37.7749, lng: -122.4194 }, // Default: San Francisco
                zoom: 10,
            });
            loadShapesFromLocalStorage();
        }

        function getUserLocation(callback) {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const userLocation = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };
                        callback(userLocation);
                    },
                    () => alert("Unable to retrieve your location.")
                );
            } else {
                alert("Geolocation is not supported by your browser.");
            }
        }

        function drawCircle(center, radius = 1000) {
            const circle = new google.maps.Circle({
                center,
                radius,
                map,
                strokeColor: "#FF0000",
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: "#FF0000",
                fillOpacity: 0.35,
            });
            shapes.push(circle);
            saveShapesToLocalStorage();
        }

        function drawRectangle(bounds) {
            const rectangle = new google.maps.Rectangle({
                bounds,
                map,
                strokeColor: "#00FF00",
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: "#00FF00",
                fillOpacity: 0.35,
            });
            shapes.push(rectangle);
            saveShapesToLocalStorage();
        }

        function shadeWest(center) {
            const bounds = {
                north: 85,
                south: -85,
                east: center.lng,
                west: -180,
            };
            drawRectangle(bounds);
        }

        function shadeCardinal(center, direction) {
            let bounds;
            switch (direction) {
                case "north":
                    bounds = {
                        north: 85,
                        south: center.lat,
                        east: 180,
                        west: -180,
                    };
                    break;
                case "south":
                    bounds = {
                        north: center.lat,
                        south: -85,
                        east: 180,
                        west: -180,
                    };
                    break;
                case "east":
                    bounds = {
                        north: 85,
                        south: -85,
                        east: 180,
                        west: center.lng,
                    };
                    break;
                case "west":
                    bounds = {
                        north: 85,
                        south: -85,
                        east: center.lng,
                        west: -180,
                    };
                    break;
            }
            drawRectangle(bounds);
        }

        function saveShapesToLocalStorage() {
            const shapesData = shapes.map((shape) => {
                if (shape instanceof google.maps.Circle) {
                    return {
                        type: "circle",
                        center: shape.getCenter().toJSON(),
                        radius: shape.getRadius(),
                    };
                } else if (shape instanceof google.maps.Rectangle) {
                    return {
                        type: "rectangle",
                        bounds: shape.getBounds().toJSON(),
                    };
                }
            });
            localStorage.setItem("shapes", JSON.stringify(shapesData));
        }

        function loadShapesFromLocalStorage() {
            const shapesData = JSON.parse(localStorage.getItem("shapes")) || [];
            shapesData.forEach((data) => {
                if (data.type === "circle") {
                    drawCircle(data.center, data.radius);
                } else if (data.type === "rectangle") {
                    drawRectangle(data.bounds);
                }
            });
        }

        function clearMap() {
            shapes.forEach((shape) => shape.setMap(null));
            shapes = [];
            localStorage.removeItem("shapes");
        }

        document.getElementById("drawCircleLocation").addEventListener("click", () => {
            getUserLocation((location) => {
                drawCircle(location, 2000);
                map.setCenter(location);
            });
        });

        document.getElementById("drawRectangleLocation").addEventListener("click", () => {
            getUserLocation((location) => {
                const bounds = {
                    north: location.lat + 0.01,
                    south: location.lat - 0.01,
                    east: location.lng + 0.01,
                    west: location.lng - 0.01,
                };
                drawRectangle(bounds);
                map.setCenter(location);
            });
        });

        document.getElementById("shadeWestLocation").addEventListener("click", () => {
            getUserLocation((location) => {
                shadeWest(location);
                map.setCenter(location);
            });
        });

        document.getElementById("shadeCardinal").addEventListener("click", () => {
            const direction = prompt("Enter direction to shade (north, south, east, west):");
            getUserLocation((location) => {
                shadeCardinal(location, direction);
                map.setCenter(location);
            });
        });

        document.getElementById("clearMap").addEventListener("click", clearMap);

        window.onload = initMap;
    </script>
</body>
</html>
